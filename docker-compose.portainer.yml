version: "3.7"

services:
  app_2fa_checker:
    image: node:18-alpine
    networks:
      - network_public
    volumes:
      - app_2fa_data:/app
    working_dir: /app
    command: >
      sh -c "
      apk add --no-cache wget curl &&
      echo 'Aguardando código fonte...' &&
      while [ ! -f package.json ]; do sleep 5; done &&
      echo 'Forçando atualização do git...' &&
      cd /app && git fetch --all &&
      git reset --hard origin/main &&
      echo 'Removendo next.config.ts se existir...' &&
      rm -f next.config.ts &&
      echo 'Limpando cache npm...' &&
      npm cache clean --force &&
      echo 'Removendo node_modules para instalação limpa...' &&
      rm -rf node_modules package-lock.json &&
      echo 'Instalando dependências (incluindo dev)...' &&
      npm install &&
      echo 'Construindo aplicação...' &&
      npm run build &&
      echo 'Removendo devDependencies para produção...' &&
      npm prune --production &&
      echo 'Iniciando aplicação em modo produção...' &&
      npm start
      "
    environment:
      - NODE_ENV=production
      - PORT=80
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=1
        - traefik.http.routers.app_2fa_checker.rule=Host(`otp.styxx.cloud`)
        - traefik.http.routers.app_2fa_checker.entrypoints=websecure
        - traefik.http.routers.app_2fa_checker.priority=1
        - traefik.http.routers.app_2fa_checker.tls.certresolver=letsencryptresolver
        - traefik.http.routers.app_2fa_checker.service=app_2fa_checker
        - traefik.http.services.app_2fa_checker.loadbalancer.server.port=80
        - traefik.http.services.app_2fa_checker.loadbalancer.passHostHeader=true
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  git_sync_2fa:
    image: alpine:latest
    volumes:
      - app_2fa_data:/data
    command: >
      sh -c "
      apk add --no-cache git &&
      while true; do
        if [ -d /data/.git ]; then
          echo '[INFO] Verificando atualizações...';
          cd /data && git fetch;
          LOCAL=$$(git rev-parse HEAD);
          REMOTE=$$(git rev-parse @{u});
          if [ $$LOCAL != $$REMOTE ]; then
            echo '[INFO] Nova versão detectada, atualizando...';
            git pull;
            echo '[INFO] Código atualizado com sucesso!';
          else
            echo '[INFO] Código já está atualizado.';
          fi;
        else
          echo '[INFO] Clonando repositório...';
          rm -rf /data/* /data/.* 2>/dev/null || true;
          git clone --depth 1 https://github.com/pedrostyxx/2fa-checker.git /data;
          echo '[INFO] Repositório clonado com sucesso!';
        fi;
        echo '[INFO] Próxima verificação em 5 minutos...';
        sleep 300;
      done
      "
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 5

volumes:
  app_2fa_data:
    external: true
    name: app_2fa_data

networks:
  network_public:
    name: network_public
    external: true